'''
평소에 잔머리가 발달하고 게으른 철수는 비밀번호를 기억하는 것이 너무 귀찮았습니다.

적어서 가지고 다니고 싶지만 누가 볼까봐 걱정입니다. 한가지 생각을 해냅니다.
 
0~9로 이루어진 번호 문자열에서 같은 번호로 붙어있는 쌍들을 소거하고 남은 번호를 비밀번호로 만드는 것입니다.

번호 쌍이 소거되고 소거된 번호 쌍의 좌우 번호가 같은 번호이면 또 소거 할 수 있습니다.

예를 들어 아래의 번호 열을 철수의 방법으로 소거하고 알아낸 비밀 번호입니다.
 


 
[입력]

10개의 테스트 케이스가 10줄에 걸쳐, 한 줄에 테스트 케이스 하나씩 제공된다.

각 테스트 케이스는 우선 문자열이 포함하는 문자의 총 수가 주어지고, 공백을 둔 다음 번호 문자열이 공백 없이 제공된다.

문자열은 0~9로 구성되며 문자열의 길이 N은 10≤N≤100이다. 비밀번호의 길이는 문자열의 길이보다 작다.
 
[출력]

#부호와 함께 테스트 케이스의 번호를 출력하고, 공백 문자 후 테스트 케이스에 대한 답(비밀번호)을 출력한다.
# '''

for tc in range(10):
    T, N = map(str, input().split())
    pwd = list(N)
    i = 0
    
    while i < len(pwd)-2:               # 인덱스 에러 감안 while지정
        if pwd[i] != pwd[i+1]:          # 문자열 다르다면
            i += 1                      # 인덱스 1 전진
        if pwd[i] == pwd[i+1]:          # 같다면
            pwd = pwd[:i] + pwd[i+2:]   # 앞 부분과 뒷부분을 슬라이싱으로 자르고 더해줘 새 pwd 만듦
            if i == 0:                  # i 가 0이면 그자리에서 다시 비교
                pass
            else:                       # i가 0이 아니라면 -1 해준 자리부터 다시 비교
                i -= 1
                
    result = ''.join(pwd)
    print(f'#{tc+1} {result}')