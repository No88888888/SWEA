'''
N개의 피자를 동시에 구울 수 있는 화덕이 있다. 피자는 치즈가 모두 녹으면 화덕에서 꺼내며, 치즈의 양은 피자마다 다르다.

1번부터 M번까지 M개의 피자를 순서대로 화덕에 넣을 때, 치즈의 양에 따라 녹는 시간이 다르기 때문에 꺼내지는 순서는 바뀔 수 있다.

주어진 조건에 따라 피자를 구울 때, 화덕에 가장 마지막까지 남아있는 피자 번호를 알아내는 프로그램을 작성하시오.





- 피자는 1번위치에서 넣거나 뺄 수 있다.
- 화덕 내부의 피자받침은 천천히 회전해서 1번에서 잠시 꺼내 치즈를 확인하고 다시 같은 자리에 넣을 수 있다.
- M개의 피자에 처음 뿌려진 치즈의 양이 주어지고, 화덕을 한 바퀴 돌 때 녹지않은 치즈의 양은 반으로 줄어든다. 이전 치즈의 양을 C라고 하면 다시 꺼냈을 때 C//2로 줄어든다.
- 치즈가 모두 녹아 0이 되면 화덕에서 꺼내고, 바로 그 자리에 남은 피자를 순서대로 넣는다.


[입력]

첫 줄에 테스트 케이스 개수 T가 주어진다.  1<=T<=50

다음 줄부터 테스트 케이스의 첫 줄에 화덕의 크기 N과 피자 개수 M이 주어지고, 다음 줄에 M개의 피자에 뿌려진 치즈의 양을 나타내는 Ci가 주어진다.

3<=N<=20, N<=M<=100, 1<=Ci<=20

[출력]

각 줄마다 "#T" (T는 테스트 케이스 번호)를 출력한 뒤, 번호를 출력한다.
'''
for tc in range(int(input())):
    N, M = map(int, input().split())
    Q = list(map(int, input().split()))
    pizza = []
    for num, cheese in enumerate(Q, start=1):
        pizza += [[num,cheese]]                 # 피자 번호와 치즈양을 같이 저장

    hwaduk = []
    for i in range(N):
        hwaduk += [pizza.pop(0)]                # 화덕 크기만큼 피자 순서대로 넣는다

    while len(hwaduk) > 1:
        hwaduk[0][1] = hwaduk[0][1]//2          
        if hwaduk[0][1] == 0:                   # 치즈가 0이 되면
            if pizza != []:                     # 더 넣을 피자가 있다면
                hwaduk[0] = pizza.pop(0)        # 넣고
                hwaduk.append(hwaduk.pop(0))    # 맨뒤로 보내준다
            else:                               # 더 넣을 피자가 없다면
                hwaduk.pop(0)                   # 화덕에서 피자만 빼준다
        else:
            hwaduk.append(hwaduk.pop(0))        # 치즈가 0이 아니라면 화덕을 돌려준다
        
    print(f'#{tc+1} {hwaduk[0][0]}')            # 화덕에 피자 하나 남으면 while문 탈출, 
                                                #그 피자의 넘버 출력
        