'''
어떤 문자열 A를 타이핑하려고 한다.

그냥 한 글자씩 타이핑 한다면 A의 길이만큼 키를 눌러야 할 것이다.

여기에 속도를 조금 더 높이기 위해 어떤 문자열 B가 저장되어 있어서 키를 한번 누른 것으로 B전체를 타이핑 할 수 있다.

이미 타이핑 한 문자를 지우는 것은 불가능하다.

예를 들어 A=”asakusa”, B=”sa”일 때, 다음 그림과 같이 B를 두 번 사용하면 5번 만에 A를 타이핑 할 수 있다.
 


A와 B가 주어질 때 A 전체를 타이핑 하기 위해 키를 눌러야 하는 횟수의 최솟값을 구하여라.


[입력]

첫 번째 줄에 테스트 케이스의 수 T가 주어진다.

각 테스트 케이스마다 첫 번째 줄에 두 문자열 A, B가 주어진다. A의 길이는 1이상 10,000이하, B의 길이는 1이상 100이하이다.


[출력]

각 테스트 케이스마다 A 전체를 타이핑 하기 위해 키를 눌러야 하는 횟수의 최솟값을 출력한다.
'''

for tc in range(int(input())):
    A, B = map(str, input().split())
    i, j = 0, 0
    N = len(A)
    M = len(B)
    result = len(A)
    count = 0
    
    while i < N and j < M:
        if A[i] != B[j]:        # 타겟, 패턴 같지 않다면
            i = i -j            # i는 -j + 1로 돌아간다
            j = -1              # j는 0으로 돌아간다
        i += 1
        j += 1

        if j == M:              # 패턴이 일치한다면
            count += 1          # count +=1
            j = 0
    
    result = result - count*(M-1) # 전체 타겟의 길이에서 패턴길이x패턴 나온 횟수 빼주고 다시 나온 횟수를 더해주면 가장 빠른 타이핑 횟수가 된다

    print(f'#{tc+1} {result}')